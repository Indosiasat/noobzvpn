addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request))
})

async function handleRequest(request) {
  const url = new URL(request.url)
  const fileUrl = url.searchParams.get('fileUrl')

  if (!fileUrl) {
    return new Response('Please provide a fileUrl parameter.', { status: 400 })
  }

  // Mengunduh file dari URL eksternal
  try {
    const fileResponse = await fetch(fileUrl)
    
    if (!fileResponse.ok) {
      return new Response('Failed to fetch the file from the provided URL.', { status: 500 })
    }

    const fileBlob = await fileResponse.blob()
    const fileName = fileUrl.split('/').pop()  // Nama file berdasarkan URL
    const fileType = fileBlob.type || 'application/octet-stream'  // Jika tidak ada tipe, default ke binary

    // Mengembalikan file untuk diunduh
    return new Response(fileBlob, {
      headers: {
        'Content-Type': fileType,
        'Content-Disposition': `attachment; filename="${fileName}"`,
      }
    })
  } catch (error) {
    return new Response(`Error: ${error.message}`, { status: 500 })
  }
}
